<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>EntityFramework.Toolkit is a library which provides implementations for EntityFramework best practices, patterns, utilities and extensions.</Description>
    <AssemblyTitle>EntityFramework.Toolkit.EF6</AssemblyTitle>
    <VersionPrefix>1.0.0</VersionPrefix>
    <Version>1.0.0</Version>
    <Authors>Thomas Galliker</Authors>
    <TargetFrameworks>net40;net45</TargetFrameworks>
    <AssemblyName>EntityFramework.Toolkit</AssemblyName>
    <PackageId>EntityFramework.Toolkit</PackageId>
    <PackageTags>Entity Framework EntityFramework EF6 UnitOfWork IUnitOfWork Repository IRepository GenericRepository IGenericRepository DbContext DbContextBase ContextTestBase</PackageTags>
    <PackageIconUrl>https://raw.githubusercontent.com/thomasgalliker/EntityFramework.Toolkit/master/EntityFramework.Toolkit.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/thomasgalliker/EntityFramework.Toolkit</PackageProjectUrl>
    <PackageLicenseUrl>http://opensource.org/licenses/Apache-2.0</PackageLicenseUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/thomasgalliker/EntityFramework.Toolkit</RepositoryUrl>
    <RuntimeIdentifiers>win10-x64</RuntimeIdentifiers>
    <SignAssembly>True</SignAssembly>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net40'">
    <DefineConstants>$(DefineConstants);NET40</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <DefineConstants>$(DefineConstants);NET45</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <ApplicationIcon />
    <OutputType>Library</OutputType>
    <StartupObject />
    <Company>superdev GmbH</Company>
    <Product>EntityFramework.Toolkit</Product>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <RootNamespace>EntityFramework.Toolkit</RootNamespace>
    <PackageReleaseNotes>2.0.0
- Renamed namespaces to EntityFramework.Toolkit.EF6
- Removed obsolete code from version 1.x

1.0.7
- Add IDbConnection.DropDatabase extension method

1.0.6
- Bug fix in AuditDbContextBase: Prevent CreatedDate being updated if only ICreatedDate interface is used
- Minor logging bug fix
- New class ContextTestBase&amp;lt;TContext, TDbConnection&amp;gt; which takes generic argument T : IDbConnection
- Swap IQueryIncluding&amp;lt;T&amp;gt;Get() method with IQueryable&amp;lt;T&amp;gt;Get()

1.0.5
- Minor fixes in release notes, namespaces, etc
- Add AuditDateTimeKind to AuditDbContextBase
      
1.0.4
- Add created/changed date tracking feature using ICreatedDate and IUpdatedDate interfaces
- Add auditing feature to track entity history
- Add extension method 'UpdateProperty' and 'UpdateProperties' to selectively update entity properties
- Add extension method 'Unique' to mark multiple properties as composite unique index
- Add query method Any as extension method
- Add RemoveById as extension method
- Extract IReadOnlyRepository, IWritableRepository and IRepository from IGenericRepository
- Change GenericRepository to non-abstract
- Add SaveAsync methods to IWritableRepository
- Add SaveChangesAsync to IUnitOfWork
- Add DbUpdateExceptionFormatter to format DbUpdateException messages

1.0.3
- Aggregate committed changes in a new type ChangeSet
- Add new methods Update and AddOrUpdate to GenericRepository

1.0.2
- Split the abstractions off into EntityFramework.Toolkit.Core assembly which is not dependent on EntityFramework
- Refactor GenericRepository to support AddRange and RemoveRange
- Adjusted all namespaces to 'EntityFramework.Toolkit'

1.0.1
- Add AutoConfigure extension method to scan for and configure EntityTypeConfigurations.
- Add IConcurrencyResolveStrategy with ClientWins, DatabaseWins and Rethrow (default) strategies
- Add Name property to IDbConnection
- Add QueryableExtensions.Include extension method

1.0.0
- Patterns such as UnitOfWork, Repository
- Helper classes, e.g. DbContextBase, ContextTestBase
- Generic way to seed data using IDataSeed and DataSeedBase
- DbConnection abstraction IDbConnection to inject ConnectionString into EntityFramework context
- EDMX tools to generate *.edmx file from EntityFramework context
</PackageReleaseNotes>
    <Copyright>Copyright 2018</Copyright>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="EntityFramework">
      <Version>6.1.2</Version>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\EntityFramework.Toolkit.Core\EntityFramework.Toolkit.Core.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Transactions" />
  </ItemGroup>

</Project>
